wso2:
  subscription:
    # -- WSO2 subscription username
    username: ""
    # -- WSO2 subscription password
    password: ""
  ingress:
    # -- Enable Ingress for SI
    enabled: true
    # -- Ingress class name
    ingressClassName: "nginx"
    # -- (list) Ingress annotations
    annotations:
    # -- K8s TLS secret for configured hostname
    tlsSecret: ""
    # -- Controls how the Ingress communicates with backend services
    backendProtocol: "AUTO_HTTP"
    # -- Controls how the  redirection of HTTPS if TLS is enabled for that ingress.
    sslRedirect: "false"
    ratelimit:
      # -- Ingress rate limit
      enabled: false
      # -- Ingress ratelimit zone name
      zoneName: ""
      # -- Ingress ratelimit burst limit
      burstLimit: ""
  config:
    admin:
      # -- Super admin username
      username: ""
      # -- Super admin password
      password: ""
    secureVault:
      # -- Enable/Disable secure vault
      enabled: true
    keyStore:
      primary:
        # -- Primary keystore file name
        fileName: "wso2carbon.jks"
        # -- Primary keystore alias
        alias: "wso2carbon"
        # -- Primary keystore password
        password: "wso2carbon"
        # -- Primary keystore key password
        keyPassword: "wso2carbon"
      secureVault:
        # -- Secure vault file name
        fileName: "securevault.jks"
        # -- Secure vault alias
        alias: "wso2carbon"
        # -- Secure vault password
        password: ""
        # -- Secure vault key password
        keyPassword: "wso2carbon"
    trustStore:
      primary:
        # -- Primary truststore file name
        fileName: "client-truststore.jks"
        # -- Primary truststore password
        password: "wso2carbon"
    transport:
      http:
        default: 9090
        msf4jHttps: 9443
    databridge:
      thrift:
        tcpPort: 7611
        sslPort: 7711
  deployment:
    securityContext:
      # -- Enable/Disable AppArmor (https://kubernetes.io/docs/tutorials/security/apparmor/)
      apparmor: false
      # -- Enable/Disable seccomp profile (https://kubernetes.io/docs/tutorials/security/seccomp/)
      seccompProfile: false
      # -- The UID to run the entrypoint of the container process
      runAsUser: "802"
    # -- Hostname of the Streaming Integrator deployment
    hostname: "si.wso2.com"
    # -- Build version of the Streaming Integrator
    BuildVersion: "4.3.0"
    # -- K8s secret name which contains JKS files
    JKSSecretName: ""
    # -- imagePullSecrets for private docker registry
    imagePullSecrets: ""
    image:
      # -- Container registry (When running on a local Kubernetes cluster using local image, make this empty)
      containerRegistry: "docker.io"
      # -- Container image repository name
      repository: "wso2/wso2si"
      # -- Container image digest
      digest: ""
      # -- Container image tag
      tag: "4.3.0-ubuntu"
      # -- Container image pull policy. Refer (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      pullPolicy: IfNotPresent

    # -- Number of deployment replicas
    replicas: 1

    strategy:
      rollingUpdate:
        # -- The maximum number of pods that can be scheduled above the desired number of pods.
        maxSurge: 1
        # -- The maximum number of pods that can be unavailable during the update.
        maxUnavailable: 0

    # These are the minimum resource recommendations for running WSO2 Streaming Integrator
    resources:
      requests:
        # -- The minimum amount of memory that should be allocated for a Pod
        memory: "512Mi"
        # -- The minimum amount of CPU that should be allocated for a Pod
        cpu: "125m"
      limits:
        # -- The maximum amount of memory that should be allocated for a Pod
        memory: "2Gi"
        # -- The maximum amount of CPU that should be allocated for a Pod
        cpu: "250m"

      # JVM settings
      # These are the resource allocation configurations associated with the JVM
      jvm:
        memory:
          # -- The minimum amount of memory that should be allocated for the JVM
          xms: "512m"
          # -- The maximum amount of memory that should be allocated for the JVM
          xmx: "1024m"

    # -- (list) Environment variables for the Streaming integrator deployment
    envs:
    mountSiddhiApps: false

    probes:
      # Indicates whether the container is running
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 180
        # How often (in seconds) to perform the probe
        periodSeconds: 10
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 180
        # How often (in seconds) to perform the probe
        periodSeconds: 10
